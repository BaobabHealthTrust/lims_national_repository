<channel version="3.3.1">
  <id>9fd6121c-d294-4ace-8758-12bd7cf5e144</id>
  <nextMetaDataId>3</nextMetaDataId>
  <name>LIMS Repo Update Order</name>
  <description></description>
  <enabled>true</enabled>
  <lastModified>
    <time>1455176864826</time>
    <timezone>Africa/Blantyre</timezone>
  </lastModified>
  <revision>96</revision>
  <sourceConnector version="3.3.1">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.http.HttpReceiverProperties" version="3.3.1">
      <pluginProperties/>
      <listenerConnectorProperties version="3.3.1">
        <host>0.0.0.0</host>
        <port>3017</port>
      </listenerConnectorProperties>
      <sourceConnectorProperties version="3.3.1">
        <responseVariable>d1</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <resourceIds class="singleton-set">
          <string>Default Resource</string>
        </resourceIds>
      </sourceConnectorProperties>
      <xmlBody>false</xmlBody>
      <parseMultipart>true</parseMultipart>
      <includeMetadata>false</includeMetadata>
      <binaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</binaryMimeTypes>
      <binaryMimeTypesRegex>false</binaryMimeTypesRegex>
      <responseContentType>text/plain</responseContentType>
      <responseDataTypeBinary>false</responseDataTypeBinary>
      <responseStatusCode>200</responseStatusCode>
      <responseHeaders class="linked-hash-map"/>
      <charset>DEFAULT_ENCODING</charset>
      <contextPath>update_order</contextPath>
      <timeout>0</timeout>
      <staticResources/>
    </properties>
    <transformer version="3.3.1">
      <steps>
        <step>
          <sequenceNumber>0</sequenceNumber>
          <name>tracking_number</name>
          <script>tmp[&apos;_id&apos;] = validate(msg[&apos;SPM&apos;][&apos;SPM.2&apos;][&apos;SPM.2.1&apos;].toString(), &apos;&apos;, new Array());</script>
          <type>Message Builder</type>
          <data>
            <entry>
              <string>Variable</string>
              <string>tmp[&apos;_id&apos;]</string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;SPM&apos;][&apos;SPM.2&apos;][&apos;SPM.2.1&apos;].toString()</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>1</sequenceNumber>
          <name>results</name>
          <script>tmp[&apos;results&apos;] = {};

logger.info(msg[&apos;OBX&apos;].length());

for(var i = 0; i &lt; msg[&apos;OBX&apos;].length(); i++) {

	if(msg[&apos;OBX&apos;][i][&apos;OBX.3&apos;][&apos;OBX.3.2&apos;].toString().trim().length &gt; 0) {

		tmp[&apos;results&apos;][msg[&apos;OBX&apos;][i][&apos;OBX.3&apos;][&apos;OBX.3.2&apos;].toString().trim()] = {
			&quot;test_status&quot; : validate(msg[&apos;OBX&apos;][i][&apos;OBX.11&apos;][&apos;OBX.11.1&apos;].toString(), &apos;&apos;, new Array()),
			&quot;remarks&quot; : &quot;&quot;,
			&quot;datetime_started&quot; : validate(msg[&apos;OBX&apos;][0][&apos;OBX.7&apos;][&apos;OBX.7.1&apos;].toString(), &apos;&apos;, new Array()),
			&quot;datetime_completed&quot; : &quot;&quot;,
            	&quot;who_updated&quot;: {
                	&quot;first_name&quot;: validate(msg[&apos;OBX&apos;][i][&apos;OBX.16&apos;][&apos;OBX.16.3&apos;].toString(), &apos;&apos;, new Array()),
                	&quot;last_name&quot;: validate(msg[&apos;OBX&apos;][i][&apos;OBX.16&apos;][&apos;OBX.16.2&apos;].toString(), &apos;&apos;, new Array()),
                	&quot;ID_number&quot;: validate(msg[&apos;OBX&apos;][i][&apos;OBX.16&apos;][&apos;OBX.16.1&apos;].toString(), &apos;&apos;, new Array()),
                	&quot;phone_number&quot;: validate(msg[&apos;OBX&apos;][0][&apos;OBX.16&apos;][&apos;OBX.16.4&apos;].toString(), &apos;&apos;, new Array()),
				&quot;facility&quot;: validate(msg[&apos;OBX&apos;][i][&apos;OBX.23&apos;][&apos;OBX.23.1&apos;].toString(), &apos;&apos;, new Array())
            	},
			&quot;results&quot;: {} 			
		}

		tmp[&apos;results&apos;][msg[&apos;OBX&apos;][i][&apos;OBX.3&apos;][&apos;OBX.3.2&apos;].toString().trim()][&apos;results&apos;][validate(msg[&apos;OBX&apos;][i][&apos;OBX.3&apos;][&apos;OBX.3.2&apos;].toString(), &apos;&apos;, new Array())] = 
				validate(msg[&apos;OBX&apos;][i][&apos;OBX.5&apos;][&apos;OBX.5.1&apos;].toString(), &apos;&apos;, new Array());
		
	}
	
}</script>
          <type>JavaScript</type>
          <data>
            <entry>
              <string>Script</string>
              <string>tmp[&apos;results&apos;] = {};

logger.info(msg[&apos;OBX&apos;].length());

for(var i = 0; i &lt; msg[&apos;OBX&apos;].length(); i++) {

	if(msg[&apos;OBX&apos;][i][&apos;OBX.3&apos;][&apos;OBX.3.2&apos;].toString().trim().length &gt; 0) {

		tmp[&apos;results&apos;][msg[&apos;OBX&apos;][i][&apos;OBX.3&apos;][&apos;OBX.3.2&apos;].toString().trim()] = {
			&quot;test_status&quot; : validate(msg[&apos;OBX&apos;][i][&apos;OBX.11&apos;][&apos;OBX.11.1&apos;].toString(), &apos;&apos;, new Array()),
			&quot;remarks&quot; : &quot;&quot;,
			&quot;datetime_started&quot; : validate(msg[&apos;OBX&apos;][0][&apos;OBX.7&apos;][&apos;OBX.7.1&apos;].toString(), &apos;&apos;, new Array()),
			&quot;datetime_completed&quot; : &quot;&quot;,
            	&quot;who_updated&quot;: {
                	&quot;first_name&quot;: validate(msg[&apos;OBX&apos;][i][&apos;OBX.16&apos;][&apos;OBX.16.3&apos;].toString(), &apos;&apos;, new Array()),
                	&quot;last_name&quot;: validate(msg[&apos;OBX&apos;][i][&apos;OBX.16&apos;][&apos;OBX.16.2&apos;].toString(), &apos;&apos;, new Array()),
                	&quot;ID_number&quot;: validate(msg[&apos;OBX&apos;][i][&apos;OBX.16&apos;][&apos;OBX.16.1&apos;].toString(), &apos;&apos;, new Array()),
                	&quot;phone_number&quot;: validate(msg[&apos;OBX&apos;][0][&apos;OBX.16&apos;][&apos;OBX.16.4&apos;].toString(), &apos;&apos;, new Array()),
				&quot;facility&quot;: validate(msg[&apos;OBX&apos;][i][&apos;OBX.23&apos;][&apos;OBX.23.1&apos;].toString(), &apos;&apos;, new Array())
            	},
			&quot;results&quot;: {} 			
		}

		tmp[&apos;results&apos;][msg[&apos;OBX&apos;][i][&apos;OBX.3&apos;][&apos;OBX.3.2&apos;].toString().trim()][&apos;results&apos;][validate(msg[&apos;OBX&apos;][i][&apos;OBX.3&apos;][&apos;OBX.3.2&apos;].toString(), &apos;&apos;, new Array())] = 
				validate(msg[&apos;OBX&apos;][i][&apos;OBX.5&apos;][&apos;OBX.5.1&apos;].toString(), &apos;&apos;, new Array());
		
	}
	
}</string>
            </entry>
          </data>
        </step>
        <step>
          <sequenceNumber>2</sequenceNumber>
          <name>sample_status</name>
          <script>tmp[&apos;sample_status&apos;] = validate(msg[&apos;OBR&apos;][&apos;OBR.25&apos;][&apos;OBR.25.1&apos;].toString(), &apos;&apos;, new Array());</script>
          <type>Message Builder</type>
          <data>
            <entry>
              <string>Variable</string>
              <string>tmp[&apos;sample_status&apos;]</string>
            </entry>
            <entry>
              <string>Mapping</string>
              <string>msg[&apos;OBR&apos;][&apos;OBR.25&apos;][&apos;OBR.25.1&apos;].toString()</string>
            </entry>
            <entry>
              <string>DefaultValue</string>
              <string></string>
            </entry>
            <entry>
              <string>RegularExpressions</string>
              <list/>
            </entry>
          </data>
        </step>
      </steps>
      <inboundTemplate encoding="base64">TVNIfF5+XCZ8fF4yLjE2Ljg0MC4xLjExMzg4My4zLjU5ODYuNF5JU09efHxeMi4xNi44NDAuMS4x
MTM4ODMuMy41OTg2LjIuMTVeSVNPXnwyMDE2MDIxMDAwMDAwMHx8T1JVXlIwMV5PUlVfUjAxfDIw
MTYwMjEwMDEwMjA0fFR8Mi41ClBJRHwxXl5eXl5efHxeXl5eXl58fF5eXl5eXl5efHx8fApPUkN8
fHx8fHx8fHx8fHx8fHx8fHx8fHx8Ck9CUnwxfHx8Xl58fHx8fHx8fHx8fHx8fHx8fHx8fHxGfApU
UTF8Ck9CWHwxfHxeXnx8fHx8fHx8fHx8fHxeXl5eXl5eXnx8fHx8fHx8Xl5eXl5eXl5eXnxefApP
Qlh8Mnx8Xl58fHx8fHx8fHx8fHx8Xl5eXl5eXl58fHx8fHx8fF5eXl5eXl5eXl58XnwKU1BNfDF8
fHxeXl5eXl58</inboundTemplate>
      <outboundTemplate encoding="base64">ewogICAgIl9pZCI6ICIiLAogICAgImFjY2Vzc2lvbl9udW1iZXIiOiAiIiwKICAgICJzYW1wbGVf
dHlwZSI6ICIiLAogICAgInNhbXBsZV9zdGF0dXMiOiAiIiwKICAgICJvcmRlcl9sb2NhdGlvbiI6
ICIiLAogICAgInByaW9yaXR5IjogIiIsCiAgICAicGF0aWVudCI6IHsKICAgICAgICAibmF0aW9u
YWxfcGF0aWVudF9pZCI6ICIiLAogICAgICAgICJmaXJzdF9uYW1lIjogIiIsCiAgICAgICAgImxh
c3RfbmFtZSI6ICIiLAogICAgICAgICJtaWRkbGVfbmFtZSI6ICIiLAogICAgICAgICJnZW5kZXIi
OiAiIiwKICAgICAgICAiZGF0ZV9vZl9iaXJ0aCI6ICIiLAogICAgICAgICJwaG9uZV9udW1iZXIi
OiAiIgogICAgfSwKICAgICJkYXRlX2RyYXduIjogIiIsCiAgICAiZGF0ZV9yZWNlaXZlZCI6ICIi
LAkKICAgICJ3aG9fb3JkZXJfdGVzdCI6IHsKICAgICAgICAiZmlyc3RfbmFtZSI6ICIiLAogICAg
ICAgICJsYXN0X25hbWUiOiAiIiwKICAgICAgICAiSURfbnVtYmVyIjogIiIsCiAgICAgICAgInBo
b25lX251bWJlciI6ICIiCiAgICB9LAogICAgInRlc3RfdHlwZXMiOiBbXSwKICAgICJyZXN1bHRz
IjogeyB9Cn0=</outboundTemplate>
      <inboundDataType>HL7V2</inboundDataType>
      <outboundDataType>JSON</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.3.1">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.3.1">
          <handleRepetitions>true</handleRepetitions>
          <handleSubcomponents>true</handleSubcomponents>
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <stripNamespaces>true</stripNamespaces>
          <segmentDelimiter>\r</segmentDelimiter>
          <convertLineBreaks>true</convertLineBreaks>
        </serializationProperties>
        <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.3.1">
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <segmentDelimiter>\r</segmentDelimiter>
        </deserializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.3.1">
          <splitType>MSH_Segment</splitType>
          <batchScript></batchScript>
        </batchProperties>
        <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.3.1">
          <segmentDelimiter>\r</segmentDelimiter>
          <successfulACKCode>AA</successfulACKCode>
          <successfulACKMessage></successfulACKMessage>
          <errorACKCode>AE</errorACKCode>
          <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
          <rejectedACKCode>AR</rejectedACKCode>
          <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
          <msh15ACKAccept>false</msh15ACKAccept>
          <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
        </responseGenerationProperties>
        <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.3.1">
          <successfulACKCode>AA,CA</successfulACKCode>
          <errorACKCode>AE,CE</errorACKCode>
          <rejectedACKCode>AR,CR</rejectedACKCode>
          <validateMessageControlId>true</validateMessageControlId>
          <originalMessageControlId>Destination_Encoded</originalMessageControlId>
          <originalIdMapVariable></originalIdMapVariable>
        </responseValidationProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.3.1">
        <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.3.1">
          <batchScript></batchScript>
        </batchProperties>
      </outboundProperties>
    </transformer>
    <filter version="3.3.1">
      <rules/>
    </filter>
    <transportName>HTTP Listener</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="3.3.1">
      <metaDataId>1</metaDataId>
      <name>Destination 1</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="3.3.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.3.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="singleton-set">
            <string>Default Resource</string>
          </resourceIds>
        </destinationConnectorProperties>
        <host>http://localhost:3014/update_order</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map"/>
        <parameters class="linked-hash-map"/>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${message.encodedData}</content>
        <contentType>application/json</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="3.3.1">
        <steps/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.3.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.3.1">
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.3.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.3.1">
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.3.1">
        <steps/>
        <inboundTemplate encoding="base64">ewogICJzdGF0dXMiIDogIiIKfQ==</inboundTemplate>
        <outboundTemplate encoding="base64">ewogICJzdGF0dXMiIDogIiIKfQ==</outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.3.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.3.1">
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.3.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.3.1">
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.3.1">
        <rules/>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map

return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="3.3.1">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>DEVELOPMENT</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>false</storeAttachments>
    <tags class="linked-hash-set"/>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties>
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <archiveEnabled>true</archiveEnabled>
    <resourceIds class="linked-hash-set">
      <string>Default Resource</string>
    </resourceIds>
  </properties>
  <codeTemplateLibraries/>
</channel>